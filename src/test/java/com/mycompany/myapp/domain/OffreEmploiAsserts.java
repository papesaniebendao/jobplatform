package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class OffreEmploiAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOffreEmploiAllPropertiesEquals(OffreEmploi expected, OffreEmploi actual) {
        assertOffreEmploiAutoGeneratedPropertiesEquals(expected, actual);
        assertOffreEmploiAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOffreEmploiAllUpdatablePropertiesEquals(OffreEmploi expected, OffreEmploi actual) {
        assertOffreEmploiUpdatableFieldsEquals(expected, actual);
        assertOffreEmploiUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOffreEmploiAutoGeneratedPropertiesEquals(OffreEmploi expected, OffreEmploi actual) {
        assertThat(actual)
            .as("Verify OffreEmploi auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOffreEmploiUpdatableFieldsEquals(OffreEmploi expected, OffreEmploi actual) {
        assertThat(actual)
            .as("Verify OffreEmploi relevant properties")
            .satisfies(a -> assertThat(a.getTitre()).as("check titre").isEqualTo(expected.getTitre()))
            .satisfies(a -> assertThat(a.getDescription()).as("check description").isEqualTo(expected.getDescription()))
            .satisfies(a -> assertThat(a.getLocalisation()).as("check localisation").isEqualTo(expected.getLocalisation()))
            .satisfies(a -> assertThat(a.getSalaire()).as("check salaire").isEqualTo(expected.getSalaire()))
            .satisfies(a -> assertThat(a.getDatePublication()).as("check datePublication").isEqualTo(expected.getDatePublication()))
            .satisfies(a -> assertThat(a.getDateExpiration()).as("check dateExpiration").isEqualTo(expected.getDateExpiration()))
            .satisfies(a -> assertThat(a.getIsActive()).as("check isActive").isEqualTo(expected.getIsActive()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOffreEmploiUpdatableRelationshipsEquals(OffreEmploi expected, OffreEmploi actual) {
        assertThat(actual)
            .as("Verify OffreEmploi relationships")
            .satisfies(a -> assertThat(a.getTypeContrat()).as("check typeContrat").isEqualTo(expected.getTypeContrat()))
            .satisfies(a -> assertThat(a.getRecruteur()).as("check recruteur").isEqualTo(expected.getRecruteur()));
    }
}
