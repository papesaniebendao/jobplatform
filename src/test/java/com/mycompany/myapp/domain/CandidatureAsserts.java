package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CandidatureAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCandidatureAllPropertiesEquals(Candidature expected, Candidature actual) {
        assertCandidatureAutoGeneratedPropertiesEquals(expected, actual);
        assertCandidatureAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCandidatureAllUpdatablePropertiesEquals(Candidature expected, Candidature actual) {
        assertCandidatureUpdatableFieldsEquals(expected, actual);
        assertCandidatureUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCandidatureAutoGeneratedPropertiesEquals(Candidature expected, Candidature actual) {
        assertThat(actual)
            .as("Verify Candidature auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCandidatureUpdatableFieldsEquals(Candidature expected, Candidature actual) {
        assertThat(actual)
            .as("Verify Candidature relevant properties")
            .satisfies(a -> assertThat(a.getDatePostulation()).as("check datePostulation").isEqualTo(expected.getDatePostulation()))
            .satisfies(a -> assertThat(a.getStatut()).as("check statut").isEqualTo(expected.getStatut()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCandidatureUpdatableRelationshipsEquals(Candidature expected, Candidature actual) {
        assertThat(actual)
            .as("Verify Candidature relationships")
            .satisfies(a -> assertThat(a.getCandidat()).as("check candidat").isEqualTo(expected.getCandidat()))
            .satisfies(a -> assertThat(a.getOffreEmploi()).as("check offreEmploi").isEqualTo(expected.getOffreEmploi()));
    }
}
